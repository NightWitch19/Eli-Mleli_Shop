{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ogane\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Shop_online\\\\client\\\\src\\\\components\\\\UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap';\nimport { fetchOneProduct, updateProduct, fetchCategories } from '../http/catalogAPI.js';\nimport { useState, useEffect } from 'react';\nimport uuid from 'react-uuid';\nimport UpdateProperties from './UpdateProperties.js';\nimport { createProperty, updateProperty, deleteProperty } from '../http/catalogAPI.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultValue = {\n  name: '',\n  price: '',\n  calories: '',\n  category: ''\n};\nconst defaultValid = {\n  name: null,\n  price: null,\n  calories: null,\n  category: null\n};\n\nconst isValid = value => {\n  const result = {};\n  const pattern = /^[1-9][0-9]*$/;\n\n  for (let key in value) {\n    if (key === 'name') result.name = value.name.trim() !== '';\n    if (key === 'price') result.price = pattern.test(value.price.trim());\n    if (key === 'calories') result.calories = pattern.test(value.calories.trim());\n    if (key === 'category') result.category = pattern.test(value.category);\n  }\n\n  return result;\n};\n\nconst updateProperties = async (properties, productId) => {\n  for (const prop of properties) {\n    const empty = prop.name.trim() === '' || prop.value.trim() === ''; // если вдруг старая хар-ка оказалась пустая — удалим ее на сервере\n\n    if (empty && prop.id) {\n      try {\n        await deleteProperty(productId, prop);\n      } catch (error) {\n        alert(error.response.data.message);\n      }\n\n      continue;\n    }\n    /*\n     * Если у объекта prop свойство append равно true — это новая хар-ка, ее надо создать.\n     * Если у объекта prop свойство change равно true — хар-ка изменилась, ее надо обновить.\n     * Если у объекта prop свойство remove равно true — хар-ку удалили, ее надо удалить.\n     */\n\n\n    if (prop.append && !empty) {\n      try {\n        await createProperty(productId, prop);\n      } catch (error) {\n        alert(error.response.data.message);\n      }\n\n      continue;\n    }\n\n    if (prop.change && !prop.remove) {\n      try {\n        await updateProperty(productId, prop.id, prop);\n      } catch (error) {\n        alert(error.response.data.message);\n      }\n\n      continue;\n    }\n\n    if (prop.remove) {\n      try {\n        await deleteProperty(productId, prop.id);\n      } catch (error) {\n        alert(error.response.data.message);\n      }\n\n      continue;\n    }\n  }\n};\n\nconst UpdateProduct = props => {\n  _s();\n\n  const {\n    id,\n    show,\n    setShow,\n    setChange\n  } = props;\n  const [value, setValue] = useState(defaultValue);\n  const [valid, setValid] = useState(defaultValid);\n  const [categories, setCategories] = useState(null); // выбранное для загрузки изображение товара\n\n  const [image, setImage] = useState(null); // список характеристик товара\n\n  const [properties, setProperties] = useState([]);\n  useEffect(() => {\n    if (id) {\n      // нужно получить с сервера данные товара для редактирования\n      fetchOneProduct(id).then(data => {\n        const prod = {\n          name: data.name,\n          price: data.price.toString(),\n          calories: data.calories.toString(),\n          category: data.categoryId.toString()\n        };\n        setValue(prod);\n        setValid(isValid(prod)); // для удобства работы с хар-ми зададим для каждой уникальный идентификатор\n        // и доп.свойства, которые подскажут нам, какой http-запрос на сервер нужно\n        // выполнить — добавления, обновления или удаления характеристики\n\n        setProperties(data.props.map(item => {\n          // при добавлении новой хар-ки свойство append принимает значение true\n          // при изменении старой хар-ки свойство change принимает значение true\n          // при удалении старой хар-ки свойство remove принимает значение true\n          return { ...item,\n            unique: uuid(),\n            append: false,\n            remove: false,\n            change: false\n          };\n        }));\n      }).catch(error => alert(error.response.data.message)); // нужно получить с сервера список категорий и список брендов\n\n      fetchCategories().then(data => setCategories(data));\n    }\n  }, [id]);\n\n  const handleInputChange = event => {\n    const data = { ...value,\n      [event.target.name]: event.target.value\n    };\n    setValue(data);\n    setValid(isValid(data));\n  };\n\n  const handleImageChange = event => {\n    setImage(event.target.files[0]);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    /*\n     * На первый взгляд кажется, что переменная correct не нужна, можно обойтись valid, но это\n     * не так. Нельзя использовать значение valid сразу после изменения этого значения — ф-ция\n     * setValid не изменяет значение состояния мгновенно. Вызов функции лишь означает — React\n     * «принял к сведению» наше сообщение, что состояние нужно изменить.\n     */\n\n    const correct = isValid(value);\n    setValid(correct);\n\n    if (correct.name && correct.price && correct.category) {\n      const data = new FormData();\n      data.append('name', value.name.trim());\n      data.append('price', value.price.trim());\n      data.append('calories', value.calories.trim());\n      data.append('categoryId', value.category);\n      if (image) data.append('image', image, image.name); // нужно обновить, добавить или удалить характеристики и обязательно дождаться\n      // ответа сервера — поэтому функция updateProperties() объявлена как async, а\n      // в теле функции для выполнения действия с каждой хар-кой используется await\n\n      if (properties.length) {\n        await updateProperties(properties, id);\n      }\n\n      updateProduct(id, data).then(data => {\n        // сбрасываем поле загрузки изображения, чтобы при сохранении товара,\n        // когда новое изображение не выбрано, не загружать старое повтороно\n        event.target.image.value = ''; // в принципе, мы могли бы сбросить все поля формы на дефолтные значения, но\n        // если пользователь решит отредатировать тот же товар повтороно, то увидит\n        // пустые поля формы — http-запрос на получение данных для редактирования мы\n        // выполняем только тогда, когда выбран новый товар (изменился id товара)\n\n        const prod = {\n          name: data.name,\n          price: data.price.toString(),\n          calories: data.calories.toString(),\n          category: data.categoryId.toString()\n        };\n        setValue(prod);\n        setValid(isValid(prod));\n        setProperties(data.props.map(item => {\n          return { ...item,\n            unique: uuid(),\n            append: false,\n            remove: false,\n            change: false\n          };\n        }));\n        setShow(false);\n        setChange(state => !state);\n      }).catch(error => alert(error.response.data.message));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: () => setShow(false),\n    size: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0442\\u043E\\u0432\\u0430\\u0440\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"name\",\n          value: value.name,\n          onChange: e => handleInputChange(e),\n          isValid: valid.name === true,\n          isInvalid: valid.name === false,\n          placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0442\\u043E\\u0432\\u0430\\u0440\\u0430...\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"category\",\n              value: value.category,\n              onChange: e => handleInputChange(e),\n              isValid: valid.category === true,\n              isInvalid: valid.category === false,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 33\n              }, this), categories && categories.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.id,\n                children: item.name\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"price\",\n              value: value.price,\n              onChange: e => handleInputChange(e),\n              isValid: valid.price === true,\n              isInvalid: valid.price === false,\n              placeholder: \"\\u0426\\u0435\\u043D\\u0430 \\u0431\\u043B\\u044E\\u0434\\u0430...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"price\",\n              value: value.price,\n              onChange: e => handleInputChange(e),\n              isValid: valid.price === true,\n              isInvalid: valid.price === false,\n              placeholder: \"\\u041A\\u0430\\u043B\\u043E\\u0440\\u0438\\u0439\\u043D\\u043E\\u0441\\u0442\\u044C \\u0431\\u043B\\u044E\\u0434\\u0430...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"image\",\n              type: \"file\",\n              onChange: e => handleImageChange(e),\n              placeholder: \"\\u0424\\u043E\\u0442\\u043E \\u0442\\u043E\\u0432\\u0430\\u0440\\u0430...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(UpdateProperties, {\n          properties: properties,\n          setProperties: setProperties\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateProduct, \"Hy3777Bn+9hlFwUaqwtWEbCN33o=\");\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["C:/Users/ogane/OneDrive/Рабочий стол/Shop_online/client/src/components/UpdateProduct.js"],"names":["Modal","Button","Form","Row","Col","fetchOneProduct","updateProduct","fetchCategories","useState","useEffect","uuid","UpdateProperties","createProperty","updateProperty","deleteProperty","defaultValue","name","price","calories","category","defaultValid","isValid","value","result","pattern","key","trim","test","updateProperties","properties","productId","prop","empty","id","error","alert","response","data","message","append","change","remove","UpdateProduct","props","show","setShow","setChange","setValue","valid","setValid","categories","setCategories","image","setImage","setProperties","then","prod","toString","categoryId","map","item","unique","catch","handleInputChange","event","target","handleImageChange","files","handleSubmit","preventDefault","correct","FormData","length","state","e"],"mappings":"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","sourcesContent":["import { Modal, Button, Form, Row, Col } from 'react-bootstrap'\nimport { fetchOneProduct, updateProduct, fetchCategories} from '../http/catalogAPI.js'\nimport { useState, useEffect } from 'react'\nimport uuid from 'react-uuid'\nimport UpdateProperties from './UpdateProperties.js'\nimport { createProperty, updateProperty, deleteProperty } from '../http/catalogAPI.js'\n\nconst defaultValue = {name: '', price: '', calories: '', category: ''}\nconst defaultValid = {name: null, price: null, calories: null, category: null}\n\nconst isValid = (value) => {\n    const result = {}\n    const pattern = /^[1-9][0-9]*$/\n    for (let key in value) {\n        if (key === 'name') result.name = value.name.trim() !== ''\n        if (key === 'price') result.price = pattern.test(value.price.trim())\n        if (key === 'calories') result.calories = pattern.test(value.calories.trim())\n        if (key === 'category') result.category = pattern.test(value.category)\n    \n    }\n    return result\n}\n\nconst updateProperties = async (properties, productId) => {\n    for (const prop of properties) {\n        const empty = prop.name.trim() === '' || prop.value.trim() === ''\n        // если вдруг старая хар-ка оказалась пустая — удалим ее на сервере\n        if (empty && prop.id) {\n            try {\n                await deleteProperty(productId, prop)\n            } catch(error) {\n                alert(error.response.data.message)\n            }\n            continue\n        }\n        /*\n         * Если у объекта prop свойство append равно true — это новая хар-ка, ее надо создать.\n         * Если у объекта prop свойство change равно true — хар-ка изменилась, ее надо обновить.\n         * Если у объекта prop свойство remove равно true — хар-ку удалили, ее надо удалить.\n         */\n        if (prop.append && !empty) {\n            try {\n                await createProperty(productId, prop)\n            } catch(error) {\n                alert(error.response.data.message)\n            }\n            continue\n        }\n        if (prop.change && !prop.remove) {\n            try {\n                await updateProperty(productId, prop.id, prop)\n            } catch(error) {\n                alert(error.response.data.message)\n            }\n            continue\n        }\n        if (prop.remove) {\n            try {\n                await deleteProperty(productId, prop.id)\n            } catch(error) {\n                alert(error.response.data.message)\n            }\n            continue\n        }\n    }\n}\n\nconst UpdateProduct = (props) => {\n    const { id, show, setShow, setChange } = props\n\n    const [value, setValue] = useState(defaultValue)\n    const [valid, setValid] = useState(defaultValid)\n\n  \n    const [categories, setCategories] = useState(null)\n\n    // выбранное для загрузки изображение товара\n    const [image, setImage] = useState(null)\n\n    // список характеристик товара\n    const [properties, setProperties] = useState([])\n\n    useEffect(() => {\n        if(id) {\n            // нужно получить с сервера данные товара для редактирования\n            fetchOneProduct(id)\n                .then(\n                    data => {\n                        const prod = {\n                            name: data.name,\n                            price: data.price.toString(),\n                            calories: data.calories.toString(),\n                            category: data.categoryId.toString(),\n                           \n                        }\n                        setValue(prod)\n                        setValid(isValid(prod))\n                        // для удобства работы с хар-ми зададим для каждой уникальный идентификатор\n                        // и доп.свойства, которые подскажут нам, какой http-запрос на сервер нужно\n                        // выполнить — добавления, обновления или удаления характеристики\n                        setProperties(data.props.map(item => {\n                            // при добавлении новой хар-ки свойство append принимает значение true\n                            // при изменении старой хар-ки свойство change принимает значение true\n                            // при удалении старой хар-ки свойство remove принимает значение true\n                            return {...item, unique: uuid(), append: false, remove: false, change: false}\n                        }))\n                    }\n                )\n                .catch(\n                    error => alert(error.response.data.message)\n                )\n            // нужно получить с сервера список категорий и список брендов\n            fetchCategories()\n                .then(\n                    data => setCategories(data)\n                )\n           \n        }\n    }, [id])\n\n    const handleInputChange = (event) => {\n        const data = {...value, [event.target.name]: event.target.value}\n        setValue(data)\n        setValid(isValid(data))\n    }\n\n    const handleImageChange = (event) => {\n        setImage(event.target.files[0])\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n\n        /*\n         * На первый взгляд кажется, что переменная correct не нужна, можно обойтись valid, но это\n         * не так. Нельзя использовать значение valid сразу после изменения этого значения — ф-ция\n         * setValid не изменяет значение состояния мгновенно. Вызов функции лишь означает — React\n         * «принял к сведению» наше сообщение, что состояние нужно изменить.\n         */\n        const correct = isValid(value)\n        setValid(correct)\n\n    \n        if (correct.name && correct.price && correct.category) {\n            const data = new FormData()\n            data.append('name', value.name.trim())\n            data.append('price', value.price.trim())\n            data.append('calories', value.calories.trim())\n            data.append('categoryId', value.category)\n            if (image) data.append('image', image, image.name)\n\n            // нужно обновить, добавить или удалить характеристики и обязательно дождаться\n            // ответа сервера — поэтому функция updateProperties() объявлена как async, а\n            // в теле функции для выполнения действия с каждой хар-кой используется await\n            if (properties.length) {\n                await updateProperties(properties, id)\n            }\n\n            updateProduct(id, data)\n                .then(\n                    data => {\n                        // сбрасываем поле загрузки изображения, чтобы при сохранении товара,\n                        // когда новое изображение не выбрано, не загружать старое повтороно\n                        event.target.image.value = ''\n                        // в принципе, мы могли бы сбросить все поля формы на дефолтные значения, но\n                        // если пользователь решит отредатировать тот же товар повтороно, то увидит\n                        // пустые поля формы — http-запрос на получение данных для редактирования мы\n                        // выполняем только тогда, когда выбран новый товар (изменился id товара)\n                        const prod = {\n                            name: data.name,\n                            price: data.price.toString(),\n                            calories: data.calories.toString(),\n                            category: data.categoryId.toString(),\n                        }\n                        setValue(prod)\n                        setValid(isValid(prod))\n                        \n                        setProperties(data.props.map(item => {\n                            return {...item, unique: uuid(), append: false, remove: false, change: false}\n                        }))\n                       \n                        setShow(false)\n                      \n                        setChange(state => !state)\n                    }\n                )\n                .catch(\n                    error => alert(error.response.data.message)\n                )\n        }\n    }\n\n    return (\n        <Modal show={show} onHide={() => setShow(false)} size=\"lg\">\n            <Modal.Header closeButton>\n                <Modal.Title>Редактирование товара</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Control\n                        name=\"name\"\n                        value={value.name}\n                        onChange={e => handleInputChange(e)}\n                        isValid={valid.name === true}\n                        isInvalid={valid.name === false}\n                        placeholder=\"Название товара...\"\n                        className=\"mb-3\"\n                    />\n                    <Row className=\"mb-3\">\n                        <Col>\n                            <Form.Select\n                                name=\"category\"\n                                value={value.category}\n                                onChange={e => handleInputChange(e)}\n                                isValid={valid.category === true}\n                                isInvalid={valid.category === false}\n                            >\n                                <option value=\"\">Категория</option>\n                                {categories && categories.map(item =>\n                                    <option key={item.id} value={item.id}>{item.name}</option>\n                                )}\n                            </Form.Select>\n                        </Col>\n                    </Row>\n                    <Row className=\"mb-3\">\n                        <Col>\n                            <Form.Control\n                                name=\"price\"\n                                value={value.price}\n                                onChange={e => handleInputChange(e)}\n                                isValid={valid.price === true}\n                                isInvalid={valid.price === false}\n                                placeholder=\"Цена блюда...\"\n                            />\n                        </Col>\n                        <Col>\n                            <Form.Control\n                                name=\"price\"\n                                value={value.price}\n                                onChange={e => handleInputChange(e)}\n                                isValid={valid.price === true}\n                                isInvalid={valid.price === false}\n                                placeholder=\"Калорийность блюда...\"\n                            />\n                        </Col>\n                        <Col>\n                            <Form.Control\n                                name=\"image\"\n                                type=\"file\"\n                                onChange={e => handleImageChange(e)}\n                                placeholder=\"Фото товара...\"\n                            />\n                        </Col>\n                    </Row>\n                    <UpdateProperties properties={properties} setProperties={setProperties} />\n                    <Row>\n                        <Col>\n                            <Button type=\"submit\">Сохранить</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default UpdateProduct"]},"metadata":{},"sourceType":"module"}