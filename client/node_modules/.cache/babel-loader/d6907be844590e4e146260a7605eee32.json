{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { SCREEN_SM, SCREEN_MD, SCREEN_LG, SCREEN_XL, SCREEN_XXL } from '../const-breakpoints';\nexport const useResize = () => {\n  _s();\n\n  const [width, setWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    const handleResize = event => {\n      setWidth(event.target.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return {\n    width,\n    isScreenSm: width >= SCREEN_SM,\n    isScreenMd: width >= SCREEN_MD,\n    isScreenLg: width >= SCREEN_LG,\n    isScreenXl: width >= SCREEN_XL,\n    isScreenXxl: width >= SCREEN_XXL\n  };\n};\n\n_s(useResize, \"G7kj69GIMHEKUWgFcp/hGy+ukY8=\");","map":{"version":3,"sources":["D:/Рабочий стол/Shop_online/client/src/Use-resize.js"],"names":["useState","useEffect","SCREEN_SM","SCREEN_MD","SCREEN_LG","SCREEN_XL","SCREEN_XXL","useResize","width","setWidth","window","innerWidth","handleResize","event","target","addEventListener","removeEventListener","isScreenSm","isScreenMd","isScreenLg","isScreenXl","isScreenXxl"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SACEC,SADF,EACaC,SADb,EACwBC,SADxB,EACmCC,SADnC,EAC8CC,UAD9C,QAEO,sBAFP;AAIA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACU,MAAM,CAACC,UAAR,CAAlC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,YAAY,GAAIC,KAAD,IAAW;AAC9BJ,MAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaH,UAAd,CAAR;AACD,KAFD;;AAGAD,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC;AACA,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCJ,YAArC;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AAUA,SAAO;AACLJ,IAAAA,KADK;AAELS,IAAAA,UAAU,EAAET,KAAK,IAAIN,SAFhB;AAGLgB,IAAAA,UAAU,EAAEV,KAAK,IAAIL,SAHhB;AAILgB,IAAAA,UAAU,EAAEX,KAAK,IAAIJ,SAJhB;AAKLgB,IAAAA,UAAU,EAAEZ,KAAK,IAAIH,SALhB;AAMLgB,IAAAA,WAAW,EAAEb,KAAK,IAAIF;AANjB,GAAP;AAQD,CArBM;;GAAMC,S","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {\r\n  SCREEN_SM, SCREEN_MD, SCREEN_LG, SCREEN_XL, SCREEN_XXL,\r\n} from '../const-breakpoints';\r\n\r\nexport const useResize = () => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = (event) => {\r\n      setWidth(event.target.innerWidth);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    width,\r\n    isScreenSm: width >= SCREEN_SM,\r\n    isScreenMd: width >= SCREEN_MD,\r\n    isScreenLg: width >= SCREEN_LG,\r\n    isScreenXl: width >= SCREEN_XL,\r\n    isScreenXxl: width >= SCREEN_XXL,\r\n  };\r\n};"]},"metadata":{},"sourceType":"module"}